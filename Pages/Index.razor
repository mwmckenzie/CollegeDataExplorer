@page "/"

@using CollegeDataExplorer.Services
@implements IDisposable

@inject HttpClient httpClient
@inject SchoolDataService schoolDataService
@inject ProgramDataService programDataService

<PageTitle>Home</PageTitle>

@if (_isLoading) {
    <MudPaper Height="80vh" Class="d-flex flex-column flex-grow-1 align-content-space-between py-3">
        <MudStack Class="d-flex flex-grow-1" AlignItems="AlignItems.Center" Justify="Justify.Center">
            <MudText Typo="Typo.h1" Align="Align.Center">Loading...</MudText>
            <MudText Typo="Typo.h1" Align="Align.Center">Building DBs</MudText>
            <MudProgressCircular Color="Color.Primary" Indeterminate="true"/>
        </MudStack>
        <MudAlert Severity="Severity.Warning" Class="mt-auto mx-auto">
            This should only take a moment or two
        </MudAlert>
    </MudPaper>
}
else {
    <MudPaper Height="80vh" Class="d-flex flex-column flex-grow-1 align-content-space-between py-3">
        <MudStack Class="d-flex flex-grow-1" AlignItems="AlignItems.Center" Justify="Justify.Center">
            <MudText Typo="Typo.h1" Align="Align.Center">College Prep</MudText>
            <MudText Typo="Typo.h1" Align="Align.Center">DB</MudText>
        </MudStack>
        <MudAlert Severity="Severity.Info" Class="mt-auto mx-auto">
            Welcome to the College Prep DB!
        </MudAlert>
    </MudPaper>
}


@code {
    private bool _isLoading;
    private string? message;
    private string? _loadProgress;
    
    [Parameter]
    public EventCallback finishedLoading { get; set; }

    protected override async Task OnInitializedAsync() {
        
        _isLoading = true;
        await programDataService.Init(httpClient);
        _isLoading = false;
        
        await finishedLoading.InvokeAsync();
    }

    private void OnLoadProgressOccured() {
        _loadProgress = schoolDataService.loadProgress;
    }

    private void ShowMessage(MouseEventArgs e) {
        message = $"Blaze a new trail with Blazor! ({e.ScreenX}:{e.ScreenY})";
    }

    public void Dispose() {
        
    }

}